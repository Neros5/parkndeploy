on:
  push:
  workflow_dispatch:

permissions:
  id-token: write

jobs:
  deploy_infrastructure:
    runs-on: ubuntu-latest
    environment: production

    outputs:
      appServiceName: ${{ steps.bicep_deploy.outputs.appServiceName }}
      staticWebAppName: ${{ steps.bicep_deploy.outputs.staticWebAppName }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to Azure 
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        enable-AzPSSession: true 

    - name: Create resource group if not exists      
      run: |
        az group show --name ${{ env.AZURE_RG_NAME }} ||
        az group create --name ${{ env.AZURE_RG_NAME }} --location ${{ secrets.AZURE_REGION }}

    - name: Deploy bicep
      id: bicep_deploy
      uses: azure/arm-deploy@v2
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        region: ${{ secrets.AZURE_REGION }}
        template: ./infrastructure/main.bicep
        parameters: project=${{ vars.PROJECT_NAME }} location=${{ secrets.AZURE_REGION }} swaLocation=${{ secrets.AZURE_SWA_REGION }} identifier=${{ vars.AZURE_RESOURCE_IDENTIFIER }}
        resourceGroupName: ${{ env.AZURE_RG_NAME }}

  download_frontend_artifact:
    runs-on: ubuntu-latest

    steps:
      - name: Download frontend artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-artifact
          path: ./frontend/build/*

      - name: Login to Azure 
        uses: azure/login@v2
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            
      - name: Get Static Web App deployment token
        run: |      
            SWA_DEPLOYMENT_TOKEN=$(az staticwebapp secrets list -n ${{ needs.deploy_infrastructure.outputs.staticWebAppName }} -o tsv --query properties.apiKey)
            echo SWA_DEPLOYMENT_TOKEN=$SWA_DEPLOYMENT_TOKEN >> $GITHUB_ENV
      
      - name: Deploy frontend to Static Web App
        uses: azure/static-web-apps-deploy@v1
        with:
            azure_static_web_apps_api_token: ${{ env.SWA_DEPLOYMENT_TOKEN }}
            app_location: frontend/dist
            action: upload
            skip_app_build: true
            skip_api_build: true

  download_backend_artifact:
    runs-on: ubuntu-latest

    steps:
      - name: Download backend artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-artifact
          path: ./backend-publish

      - name: Login to Azure 
        uses: azure/login@v2
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - name: Deploy backend to App Service
        uses: azure/webapps-deploy@v2
        with: 
            app-name: ${{ needs.deploy_infrastructure.outputs.appServiceName }}
            package: ./backend/ParkNDeploy.Api/publish
